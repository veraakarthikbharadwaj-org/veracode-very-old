name: Veracode Static Code Analysis

run-name: Static Code Analysis - ${{ github.event.client_payload.repository.name }}

on:
  repository_dispatch:
    types: [java-maven-pipeline-scan, 
            java-gradle-pipeline-scan, 
            source-code-pipeline-scan, 
            dot-net-pipeline-scan, 
            go-pipeline-scan, 
            dot-net-policy-scan, 
            java-maven-policy-scan, 
            java-gradle-policy-scan, 
            source-code-policy-scan, 
            go-policy-scan,
            dot-net-pipeline-scan-notifs]

jobs:
  verify_veracode_api_credentials:
    name: Verify Veracode API credentials
    runs-on: ubuntu-latest
    outputs:
      Total_Elements: ${{ steps.generate_header.outputs.Total_Elements }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: API Call
        id: generate_hmac_value
        run: |
          ID='${{ secrets.VERACODE_API_ID }}'
          KEY='${{ secrets.VERACODE_API_KEY }}'
          host='api.veracode.com'
          method='GET'
          if [[ $ID == vera01ei-* ]]; then
          host='api.veracode.eu'
          ID="${ID/vera01ei-/}"  # One-liner for cleaning up ID
          ID="${ID:-''}"  # Set to '' if the result is empty
          KEY="${KEY/vera01es-/}"  # One-liner for cleaning up KEY
          KEY="${KEY:-''}"
          echo 'Region: EU'
          else
          host='api.veracode.com'
          ID=$ID
          KEY=$KEY
          echo 'Region: US'
          fi
          url="https://$host/api/authn/v2/users/self" 
          echo "url: $url"
          RESULT=$(node -e "require('./generate_signature').calculateVeracodeAuthHeader('$url', '$method', '$host', '$ID', '$KEY')")
          echo "HMAC:" $RESULT
          api_response=$(curl -X GET "$url" -H "Host: $host" -H "Authorization: $RESULT")
          echo "API Response: $api_response"
          EXPIRATION_DATE=$(echo "$api_response" | jq -r '.api_credentials.expiration_ts')
          EXPIRATION=$(echo "$EXPIRATION_DATE" | jq 'strptime("%Y-%m-%dT%H:%M:%S.000+0000")|mktime')
          DAYS_REMAINING=$(( (($EXPIRATION - $NOW) / 86400) + 1 ))
          echo "DAYS_REMAINING=$DAYS_REMAINING" >> "$GITHUB_OUTPUT"

      - name: Validate credentials expiration date
        id: validate_creds_expiration_date
        uses: actions/github-script@v7.0.1
        with:
          script: |
           core.setFailed( "${{ inputs.message }}")
      
  register:
    uses: ./.github/workflows/veracode-check-run.yml
    with:
      check_run_name: ${{ github.workflow }}
      head_sha: ${{ github.event.client_payload.sha }}
      repositroy_owner: ${{ github.event.client_payload.repository.owner }}
      repositroy_name: ${{ github.event.client_payload.repository.name }}
      event_type: ${{ github.event.client_payload.event_type }}
      github_token: ${{ github.event.client_payload.token }}
      run_id: ${{ github.run_id }}
        
  build:
    needs: register
    uses: ./.github/workflows/veracode-build-logic.yml
    with:
      group_name: ${{ github.event.client_payload.group_name }}

  pipeline_scan:
    # needs the build step before this job will start running
    needs: build
    if: contains(github.event.action, 'pipeline')
    uses: ./.github/workflows/veracode-pipeline-scan.yml
    with:
      policy_name: ${{ github.event.client_payload.policy_name }}
    secrets: inherit
    
  policy_scan:
    needs: build
    if: contains(github.event.action, 'policy')
    uses: ./.github/workflows/veracode-policy-scan.yml
    with:
      profile_name: ${{ github.event.client_payload.profile_name }}
      policy_name: ${{ github.event.client_payload.policy_name }}
      moddules_to_scan: ${{ github.event.client_payload.modules_to_scan }}
    secrets: inherit
